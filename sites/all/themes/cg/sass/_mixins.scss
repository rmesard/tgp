// @file
// Custom sass mixins
//
// Define the custom mixins for your project here.
// http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#defining_a_mixin

// Makes an element visually hidden, but accessible.
// @see http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
@mixin element-invisible {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
    clip: rect(1px 1px 1px 1px); // IE6 and IE7 use the wrong syntax.
  }
  clip: rect(1px, 1px, 1px, 1px);
}

// Turns off the element-invisible effect.
@mixin element-invisible-off {
  position: static !important;
  clip: auto;
  height: auto;
  width: auto;
  overflow: auto;
}

// Makes an element visually hidden by default, but visible when focused.
@mixin element-focusable {
  @include element-invisible;

  &:active,
  &:focus {
    @include element-invisible-off;
  }
}

@mixin paws-bottom {
  position: relative;
  padding-bottom: 0.5em;
  border: 0;
  border-bottom: solid 1px #737373;
  //font-family: Georgia, sans-serif;
  font-size: 1.25em;
  color: #737373;
  &:after {
    content: "\f1b0\20\f1b0\20\f1b0";
    position: absolute;
    right: 0;
    bottom: -1px;
    line-height: 1px;
    color: #737373;
    font-family: FontAwesome;
    font-weight: normal;
    text-rendering: auto;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    //float: right;
    margin: 0.75em 2em 0 0;
    padding: 0 0.25em;
    background-color: #fff;
  }
  @media all and (min-width: 768px) {
    padding-bottom: 0.1em;
  }
}
